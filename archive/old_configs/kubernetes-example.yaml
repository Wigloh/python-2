# Exemple de d√©ploiement Kubernetes complet
# üîß MODIFIER les valeurs selon votre environnement

---
# 1. Secrets pour PostgreSQL
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: mspr-system
type: Opaque
stringData:
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "your_secure_password_here"  # üìù MODIFIER
  POSTGRES_DB: "cofrap"

---
# 2. Secret pour le chiffrement
apiVersion: v1
kind: Secret
metadata:
  name: encryption-secret
  namespace: mspr-system
type: Opaque
stringData:
  FERNET_KEY: "ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg="  # üìù G√âN√âRER une nouvelle cl√© !

---
# 3. Secret pour Flask
apiVersion: v1
kind: Secret
metadata:
  name: flask-secret
  namespace: mspr-system
type: Opaque
stringData:
  SECRET_KEY: "your_flask_secret_key_here"  # üìù MODIFIER

---
# 4. Service PostgreSQL
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: mspr-system
spec:
  selector:
    app: postgresql
  ports:
    - port: 5432
      targetPort: 5432

---
# 5. D√©ploiement PostgreSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: mspr-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - name: postgresql
        image: postgres:13
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_DB
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgresql-storage
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgresql-storage
        persistentVolumeClaim:
          claimName: postgresql-pvc

---
# 6. PersistentVolumeClaim pour PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: mspr-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# 7. D√©ploiement Application Flask
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mspr-flask-app
  namespace: mspr-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mspr-flask-app
  template:
    metadata:
      labels:
        app: mspr-flask-app
    spec:
      containers:
      - name: flask-app
        image: your-registry/mspr-flask:latest  # üìù MODIFIER avec votre image
        env:
        - name: DB_HOST
          value: "postgresql-service"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_DB
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: POSTGRES_PASSWORD
        - name: FERNET_KEY
          valueFrom:
            secretKeyRef:
              name: encryption-secret
              key: FERNET_KEY
        - name: FLASK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: flask-secret
              key: SECRET_KEY
        - name: OPENFAAS_URL
          value: "http://gateway.openfaas:8080/function/"  # üìù MODIFIER selon votre setup
        ports:
        - containerPort: 5000

---
# 8. Service Flask
apiVersion: v1
kind: Service
metadata:
  name: mspr-flask-service
  namespace: mspr-system
spec:
  selector:
    app: mspr-flask-app
  ports:
    - port: 80
      targetPort: 5000

---
# 9. Ingress pour l'application
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mspr-ingress
  namespace: mspr-system
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: mspr.your-domain.com  # üìù MODIFIER avec votre domaine
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mspr-flask-service
            port:
              number: 80

---
# 10. Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: mspr-system
